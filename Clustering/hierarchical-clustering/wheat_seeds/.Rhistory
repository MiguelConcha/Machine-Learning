knitr::opts_chunk$set(echo = TRUE)
# Biblioteca para hacer la lectura del archivo.
library(readr)
# Leyendo el CSV dándole la ruta relativa.
Data = read.csv("../../data/seeds_dataset.csv")
# Visualizando el contenido del CSV.
View(Data)
# Tenemos una copia de los datos.
datos.caracteristicas = Data
# A la copia le quitamos las columnas que no son de interés.
datos.caracteristicas$ID <- NULL
datos.caracteristicas$seedType <- NULL
# Vemos cómo quedaron los nuevos datos.
View(datos.caracteristicas)
# Normalizando los datos y luego visualizándolos.
datos.escalados <- as.data.frame(scale(datos.caracteristicas))
View(datos.escalados)
# Fijando la semilla de aleatoriedad.
set.seed(80)
knitr::opts_chunk$set(echo = TRUE)
# Biblioteca para hacer la lectura del archivo.
library(readr)
# Leyendo el CSV dándole la ruta relativa.
Data = read.csv("../../data/seeds_dataset.csv")
# Visualizando el contenido del CSV.
View(Data)
# Tenemos una copia de los datos.
datos.caracteristicas = Data
# A la copia le quitamos las columnas que no son de interés.
datos.caracteristicas$ID <- NULL
datos.caracteristicas$seedType <- NULL
# Vemos cómo quedaron los nuevos datos.
View(datos.caracteristicas)
# Normalizando los datos y luego visualizándolos.
# Obteniendo las medias de cada columna y guardándolas en un vector.
m <- apply(datos.caracteristicas, 2, mean)
# Obteniendo las desviaciones estándar de cada columna y guardándolas en otro vector.
s <- apply(datos.caracteristicas, 2, sd)
# Reesclando las características y luego visualizando cómo quedan.
datos.escalados <- scale(datos.caracteristicas, m, s)
View(datos.escalados)
# Usando la función que ya proporciona R para calcular las distancias.
distancias <- dist(datos.escalados)
# R proporciona y la función para llevar a cabo el algoritmo aglomerativo jerárquico.
hc.c <- hclust(distancias)
# Graficando luego de etiquetar los ejes y reducir el tamaño de las etiquetas de observaciones.
plot(hc.c, xlab="Observaciones",ylab="Altura",main="Dendograma con Distancias máximas",sub="",cex = 0.1,hang = -1)
# R proporciona y la función para llevar a cabo el algoritmo aglomerativo jerárquico.
hc.a <- hclust(distancias, method = "average")
# Graficando luego de etiquetar los ejes y reducir el tamaño de las etiquetas de observaciones.
plot(hc.a,xlab="Observaciones",ylab="Altura",main="Dendograma con Distancias máximas",sub="",cex = 0.1,hang = -1)
# viendo cómo se agrupan en 3 cluster con cada técnica.
distancias_maximas <- cutree(hc.c, 3)
similitud_ponderada <- cutree(hc.a, 3)
# Tabla comparativa.
table(distancias_maximas, similitud_ponderada)
# Este método (dado por la función de R) ya eleva las distancias al cuadrado.
hc.w <- hclust(distancias, method = "ward.D2")
plot(hc.w, xlab="Observaciones",ylab="Altura",main="Dendograma con Ward",sub="",cex = 0.1,hang = -1)
# Obtenemos cómo argupa en tres clusters con Ward.
ward <- cutree(hc.w, 3)
# Tabla comparativa con distancias máximas.
table(distancias_maximas, ward)
# Tabla comparativa con similitud ponderada.
table(similitud_ponderada, ward)
